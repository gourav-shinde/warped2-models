# build     <rootPath> <gitBranch> <mpiIncludePath> <mpiLibraryPath> <additionalFlags>

# buildLadder <rootPath> <gitBranch> <mpiIncludePath> <mpiLibraryPath> <additionalFlags> <bottomSize>

# bagProfile <model> <modelCmd> <seqSimTime> <fileName>

# runBag    <testCycles> <timeoutPeriod> <model> <modelCmd> <maxSimTime>
#           <workerThreads> <staticBagWindowSize> <fracBagWindow> <gvtMethod>
#           <gvtPeriod> <stateSavePeriod> <partitioningFile>

# permuteConfigBag <testCycles> <timeoutPeriod> <model> <modelCmd> <arrMaxSimTime>
#           <arrWorkerThreads> <arrStaticBagWindowSize> <arrFracBagWindow>
#           <arrGvtMethod> <arrGvtPeriod> <arrStateSavePeriod> <partitioningFile>

# runChain  <testCycles> <timeoutPeriod> <model> <modelCmd> <maxSimTime> <workerThreads>
#           <scheduleQCount> <chainSize> <isLpMigrationOn> <gvtMethod> <gvtPeriod>
#           <stateSavePeriod>

# runBlock  <testCycles> <timeoutPeriod> <model> <modelCmd> <maxSimTime>
#           <workerThreads> <scheduleQCount> <blockSize> <isLpMigrationOn>
#           <gvtMethod> <gvtPeriod> <stateSavePeriod>

# permuteConfigGroup <testCycles> <timeoutPeriod> <model> <modelCmd> <arrMaxSimTime>
#           <arrWorkerThreads> <arrScheduleQCount> <groupType> <arrGroupSize>
#           <arrLpMigration> <arrGvtMethod> <arrGvtPeriod> <arrStateSavePeriod>

# runScheduleQ <testCycles> <timeoutPeriod> <model> <modelCmd> <maxSimTime>
#           <workerThreads> <scheduleQType> <scheduleQCount> <isLpMigrationOn>
#           <gvtMethod> <gvtPeriod> <stateSavePeriod>

# permuteConfigScheduleQ <testCycles> <timeoutPeriod> <model> <modelCmd>
#           <arrMaxSimTime> <arrWorkerThreads> <scheduleQType> <arrScheduleQCount>
#           <arrLpMigration> <arrGvtMethod> <arrGvtPeriod> <arrStateSavePeriod>

# runSequential <timeoutPeriod> <model> <modelCmd> <maxSimTime>

### Common Configurations ###

root_dir=$ROOTPATH

#mpi_cmd="/usr/bin/mpiexec -hostfile ~/hosts "
mpi_cmd=""


## Choose model type and specifications ##
model="epidemic"
mspec="100k-ws"

iterations=10

worker_threads=("3" "6")

schedule_queues=("1" "2" "3" "6")

#lp_migration=("off" "on")
lp_migration=("off")

#gvt_period=("128" "512" "1024")
gvt_period=("1000")

#gvt_method=("asynchronous" "synchronous")
gvt_method=("asynchronous")

#state_save_period=("10" "16" "32" "64")
state_save_period=("10" "32")


### Simulation Models ###

case_name="$model-$mspec"
case $case_name in
    "traffic-1m")
        echo "Simulations for 1 million LPs traffic"
        model_cmd="${mpi_cmd}./traffic_sim -x 1024 -y 1024 -n 5"
        max_sim_time=("15000" "20000" "10000")
        seq_sim_time=300
        timeout=200
        ;;

    "traffic-10k")
        echo "Simulations for 10k LPs traffic"
        model_cmd="${mpi_cmd}./traffic_sim"
        max_sim_time=("15000" "20000" "10000")
        seq_sim_time=6000
        timeout=150
        ;;

    "epidemic-10k-ws")
        echo "Simulations for 10k LPs epidemic (watts-strogatz)"
        model_cmd="${mpi_cmd}./epidemic_sim"
        max_sim_time=("15000" "20000" "10000")
        seq_sim_time=8000
        timeout=200
        ;;

    "epidemic-10k-ba")
        echo "Simulations for 10k LPs epidemic (barabasi-albert)"
        model_cmd="${mpi_cmd}./epidemic_sim -m model_10k_ba.dat"
        max_sim_time=("15000" "20000" "10000")
        seq_sim_time=8000
        timeout=200
        ;;

    "epidemic-100k-ws")
        echo "Simulations for 100k LPs epidemic (watts-strogatz)"
        model_cmd="${mpi_cmd}./epidemic_sim -m model_100k_ws.dat"
        max_sim_time=("6000" "10000")
        seq_sim_time=200
        timeout=200
        ;;

    "epidemic-100k-ba")
        echo "Simulations for 100k LPs epidemic (barabasi-albert)"
        model_cmd="${mpi_cmd}./epidemic_sim -m model_100k_ba.dat"
        max_sim_time=("6000" "10000")
        seq_sim_time=200
        timeout=200
        ;;

    "sandpile-1m")
        echo "Simulations for 1m LPs sandpile"
        model_cmd="${mpi_cmd}./sandpile_sim"
        max_sim_time=("15000")
        seq_sim_time=8000
        timeout=150
        ;;

    "sandpile-10k")
        echo "Simulations for 10k LPs sandpile"
        model_cmd="${mpi_cmd}./sandpile_sim -d 100"
        max_sim_time=("15000")
        seq_sim_time=8000
        timeout=150
        ;;

    "pcs-10k")
        echo "Simulations for 10k LPs pcs"
        model_cmd="${mpi_cmd}./pcs_sim"
        max_sim_time=("500")
        seq_sim_time=350
        timeout=150
        ;;

    "pcs-1m")
        echo "Simulations for 1m LPs pcs"
        model_cmd="${mpi_cmd}./pcs_sim -x 1024 -y 1024"
        max_sim_time=("500")
        seq_sim_time=350
        timeout=150
        ;;

    *)
        echo "Invalid model choice"
        exit 1
        ;;
esac


### Execution Sequences ###

# sequential and stl-multiset/split-queue
build $root_dir master
runSequential $timeout "$model" "$model_cmd" ${max_sim_time[0]}
permuteConfigScheduleQ $iterations $timeout "$model" "$model_cmd" max_sim_time worker_threads \
        worker_threads gvt_method gvt_period state_save_period
#second worker_thread is worker_threads


# hashing
build $root_dir HashingPOC
permuteConfigScheduleQ $iterations $timeout "$model" "$model_cmd" max_sim_time worker_threads \
        gvt_method gvt_period state_save_period


# Move to model directory #
mkdir logs/$case_name
mv logs/*.* logs/$case_name/
